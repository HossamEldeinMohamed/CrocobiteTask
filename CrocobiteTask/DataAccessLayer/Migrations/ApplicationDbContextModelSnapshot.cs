// <auto-generated />
using System;
using CrocobitTask.DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrocobitTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrocobitTask.Data_Access.Model.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fc147e5-5c7a-4ec9-aad9-cd5a7b27c3d7"),
                            Name = "Crocobite1"
                        },
                        new
                        {
                            Id = new Guid("eaf5f253-b1fc-4a84-ad0f-c4ffebc5d9f3"),
                            Name = "Crocobite2"
                        },
                        new
                        {
                            Id = new Guid("e91e5070-9cd4-4849-a159-cf69fafdcc2d"),
                            Name = "Crocobite3"
                        },
                        new
                        {
                            Id = new Guid("6f9317a0-4f78-4245-8835-884bdba449b5"),
                            Name = "Crocobite4"
                        });
                });

            modelBuilder.Entity("CrocobitTask.Data_Access.Model.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceivingCompanyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SendingCompanyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceivingCompanyID");

                    b.HasIndex("SendingCompanyID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("CrocobitTask.Data_Access.Model.Registration", b =>
                {
                    b.HasOne("CrocobitTask.Data_Access.Model.Company", "ReceivingCompany")
                        .WithMany("ReceivingRegistrations")
                        .HasForeignKey("ReceivingCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CrocobitTask.Data_Access.Model.Company", "SendingCompany")
                        .WithMany("SendingRegistrations")
                        .HasForeignKey("SendingCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReceivingCompany");

                    b.Navigation("SendingCompany");
                });

            modelBuilder.Entity("CrocobitTask.Data_Access.Model.Company", b =>
                {
                    b.Navigation("ReceivingRegistrations");

                    b.Navigation("SendingRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
